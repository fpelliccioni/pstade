///////////////////////////////////////////////////////////////////////////////
// GENERATED BY msg_wm_converter
//

///////////////////////////////////////////////////////////////////////////////
// Standard Windows message macros

///////////////////////////////////////////////////////////////////////////////
// msg_wm_create
//
template<
    LRESULT (Derived::*func)(LPCREATESTRUCT)
>
struct msg_wm_create
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CREATE)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((LPCREATESTRUCT)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_initdialog
//
template<
    LRESULT (Derived::*func)(HWND,LPARAM)
>
struct msg_wm_initdialog
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_INITDIALOG)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HWND)wParam, lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_copydata
//
template<
    LRESULT (Derived::*func)(HWND,PCOPYDATASTRUCT)
>
struct msg_wm_copydata
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_COPYDATA)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HWND)wParam, (PCOPYDATASTRUCT)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_destroy
//
template<
    void (Derived::*func)()
>
struct msg_wm_destroy
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_DESTROY)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_move
//
template<
    void (Derived::*func)(KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_move
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MOVE)
        {
            derived.set_msg_handled(true);
            (derived.*func)(KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_size
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CSize)
>
struct msg_wm_size
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SIZE)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CSize(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_activate
//
template<
    void (Derived::*func)(UINT,BOOL,HWND)
>
struct msg_wm_activate
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_ACTIVATE)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)LOWORD(wParam), (BOOL)HIWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_setfocus
//
template<
    void (Derived::*func)(HWND)
>
struct msg_wm_setfocus
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SETFOCUS)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_killfocus
//
template<
    void (Derived::*func)(HWND)
>
struct msg_wm_killfocus
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_KILLFOCUS)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_enable
//
template<
    void (Derived::*func)(BOOL)
>
struct msg_wm_enable
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_ENABLE)
        {
            derived.set_msg_handled(true);
            (derived.*func)((BOOL)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_paint
//
template<
    void (Derived::*func)(HDC)
>
struct msg_wm_paint
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_PAINT)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HDC)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_close
//
template<
    void (Derived::*func)()
>
struct msg_wm_close
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CLOSE)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_queryendsession
//
template<
    LRESULT (Derived::*func)(UINT,UINT)
>
struct msg_wm_queryendsession
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_QUERYENDSESSION)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((UINT)wParam, (UINT)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_queryopen
//
template<
    LRESULT (Derived::*func)()
>
struct msg_wm_queryopen
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_QUERYOPEN)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)();
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_erasebkgnd
//
template<
    LRESULT (Derived::*func)(HDC)
>
struct msg_wm_erasebkgnd
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_ERASEBKGND)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_syscolorchange
//
template<
    void (Derived::*func)()
>
struct msg_wm_syscolorchange
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SYSCOLORCHANGE)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_endsession
//
template<
    void (Derived::*func)(BOOL,UINT)
>
struct msg_wm_endsession
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_ENDSESSION)
        {
            derived.set_msg_handled(true);
            (derived.*func)((BOOL)wParam, (UINT)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_showwindow
//
template<
    void (Derived::*func)(BOOL,int)
>
struct msg_wm_showwindow
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SHOWWINDOW)
        {
            derived.set_msg_handled(true);
            (derived.*func)((BOOL)wParam, (int)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcoloredit
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcoloredit
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CTLCOLOREDIT)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcolorlistbox
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcolorlistbox
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CTLCOLORLISTBOX)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcolorbtn
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcolorbtn
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CTLCOLORBTN)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcolordlg
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcolordlg
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CTLCOLORDLG)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcolorscrollbar
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcolorscrollbar
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CTLCOLORSCROLLBAR)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ctlcolorstatic
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_wm_ctlcolorstatic
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CTLCOLORSTATIC)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_settingchange
//
template<
    void (Derived::*func)(UINT,LPCTSTR)
>
struct msg_wm_settingchange
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SETTINGCHANGE)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (LPCTSTR)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_devmodechange
//
template<
    void (Derived::*func)(LPCTSTR)
>
struct msg_wm_devmodechange
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_DEVMODECHANGE)
        {
            derived.set_msg_handled(true);
            (derived.*func)((LPCTSTR)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_activateapp
//
template<
    void (Derived::*func)(BOOL,DWORD)
>
struct msg_wm_activateapp
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_ACTIVATEAPP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((BOOL)wParam, (DWORD)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_fontchange
//
template<
    void (Derived::*func)()
>
struct msg_wm_fontchange
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_FONTCHANGE)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_timechange
//
template<
    void (Derived::*func)()
>
struct msg_wm_timechange
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_TIMECHANGE)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_cancelmode
//
template<
    void (Derived::*func)()
>
struct msg_wm_cancelmode
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CANCELMODE)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_setcursor
//
template<
    LRESULT (Derived::*func)(HWND,UINT,UINT)
>
struct msg_wm_setcursor
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SETCURSOR)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HWND)wParam, (UINT)LOWORD(lParam), (UINT)HIWORD(lParam));
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mouseactivate
//
template<
    LRESULT (Derived::*func)(HWND,UINT,UINT)
>
struct msg_wm_mouseactivate
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MOUSEACTIVATE)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HWND)wParam, (UINT)LOWORD(lParam), (UINT)HIWORD(lParam));
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_childactivate
//
template<
    void (Derived::*func)()
>
struct msg_wm_childactivate
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CHILDACTIVATE)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_getminmaxinfo
//
template<
    void (Derived::*func)(LPMINMAXINFO)
>
struct msg_wm_getminmaxinfo
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_GETMINMAXINFO)
        {
            derived.set_msg_handled(true);
            (derived.*func)((LPMINMAXINFO)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_iconerasebkgnd
//
template<
    void (Derived::*func)(HDC)
>
struct msg_wm_iconerasebkgnd
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_ICONERASEBKGND)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HDC)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_spoolerstatus
//
template<
    void (Derived::*func)(UINT,UINT)
>
struct msg_wm_spoolerstatus
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SPOOLERSTATUS)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (UINT)LOWORD(lParam));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_drawitem
//
template<
    void (Derived::*func)(UINT,LPDRAWITEMSTRUCT)
>
struct msg_wm_drawitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_DRAWITEM)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (LPDRAWITEMSTRUCT)lParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_measureitem
//
template<
    void (Derived::*func)(UINT,LPMEASUREITEMSTRUCT)
>
struct msg_wm_measureitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MEASUREITEM)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (LPMEASUREITEMSTRUCT)lParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_deleteitem
//
template<
    void (Derived::*func)(UINT,LPDELETEITEMSTRUCT)
>
struct msg_wm_deleteitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_DELETEITEM)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (LPDELETEITEMSTRUCT)lParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_chartoitem
//
template<
    LRESULT (Derived::*func)(UINT,UINT,HWND)
>
struct msg_wm_chartoitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CHARTOITEM)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_vkeytoitem
//
template<
    LRESULT (Derived::*func)(UINT,UINT,HWND)
>
struct msg_wm_vkeytoitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_VKEYTOITEM)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_querydragicon
//
template<
    LRESULT (Derived::*func)()
>
struct msg_wm_querydragicon
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_QUERYDRAGICON)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)();
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_compareitem
//
template<
    LRESULT (Derived::*func)(UINT,LPCOMPAREITEMSTRUCT)
>
struct msg_wm_compareitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_COMPAREITEM)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((UINT)wParam, (LPCOMPAREITEMSTRUCT)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_compacting
//
template<
    void (Derived::*func)(UINT)
>
struct msg_wm_compacting
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_COMPACTING)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nccreate
//
template<
    LRESULT (Derived::*func)(LPCREATESTRUCT)
>
struct msg_wm_nccreate
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCCREATE)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((LPCREATESTRUCT)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncdestroy
//
template<
    void (Derived::*func)()
>
struct msg_wm_ncdestroy
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCDESTROY)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nccalcsize
//
template<
    LRESULT (Derived::*func)(BOOL,LPARAM)
>
struct msg_wm_nccalcsize
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCCALCSIZE)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((BOOL)wParam, lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nchittest
//
template<
    LRESULT (Derived::*func)(KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_nchittest
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCHITTEST)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)(KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncpaint
//
template<
    void (Derived::*func)(HRGN)
>
struct msg_wm_ncpaint
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCPAINT)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HRGN)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncactivate
//
template<
    LRESULT (Derived::*func)(BOOL)
>
struct msg_wm_ncactivate
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCACTIVATE)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((BOOL)wParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_getdlgcode
//
template<
    LRESULT (Derived::*func)(LPMSG)
>
struct msg_wm_getdlgcode
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_GETDLGCODE)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((LPMSG)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncmousemove
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_ncmousemove
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCMOUSEMOVE)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nclbuttondown
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_nclbuttondown
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCLBUTTONDOWN)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nclbuttonup
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_nclbuttonup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCLBUTTONUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nclbuttondblclk
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_nclbuttondblclk
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCLBUTTONDBLCLK)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncrbuttondown
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_ncrbuttondown
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCRBUTTONDOWN)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncrbuttonup
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_ncrbuttonup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCRBUTTONUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncrbuttondblclk
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_ncrbuttondblclk
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCRBUTTONDBLCLK)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncmbuttondown
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_ncmbuttondown
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCMBUTTONDOWN)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncmbuttonup
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_ncmbuttonup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCMBUTTONUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncmbuttondblclk
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_ncmbuttondblclk
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCMBUTTONDBLCLK)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_keydown
//
template<
    void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_keydown
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_KEYDOWN)
        {
            derived.set_msg_handled(true);
            (derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_keyup
//
template<
    void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_keyup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_KEYUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_char
//
template<
    void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_char
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CHAR)
        {
            derived.set_msg_handled(true);
            (derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_deadchar
//
template<
    void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_deadchar
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_DEADCHAR)
        {
            derived.set_msg_handled(true);
            (derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_syskeydown
//
template<
    void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_syskeydown
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SYSKEYDOWN)
        {
            derived.set_msg_handled(true);
            (derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_syskeyup
//
template<
    void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_syskeyup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SYSKEYUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_syschar
//
template<
    void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_syschar
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SYSCHAR)
        {
            derived.set_msg_handled(true);
            (derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_sysdeadchar
//
template<
    void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_sysdeadchar
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SYSDEADCHAR)
        {
            derived.set_msg_handled(true);
            (derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_syscommand
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_syscommand
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SYSCOMMAND)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_tcard
//
template<
    void (Derived::*func)(UINT,DWORD)
>
struct msg_wm_tcard
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_TCARD)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (DWORD)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_timer
//
template<
    void (Derived::*func)(UINT,TIMERPROC)
>
struct msg_wm_timer
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_TIMER)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (TIMERPROC)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_hscroll
//
template<
    void (Derived::*func)(int,short,HWND)
>
struct msg_wm_hscroll
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_HSCROLL)
        {
            derived.set_msg_handled(true);
            (derived.*func)((int)LOWORD(wParam), (short)HIWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_vscroll
//
template<
    void (Derived::*func)(int,short,HWND)
>
struct msg_wm_vscroll
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_VSCROLL)
        {
            derived.set_msg_handled(true);
            (derived.*func)((int)LOWORD(wParam), (short)HIWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_initmenu
//
template<
    void (Derived::*func)(HMENU)
>
struct msg_wm_initmenu
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_INITMENU)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HMENU)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_initmenupopup
//
template<
    void (Derived::*func)(HMENU,UINT,BOOL)
>
struct msg_wm_initmenupopup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_INITMENUPOPUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HMENU)wParam, (UINT)LOWORD(lParam), (BOOL)HIWORD(lParam));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menuselect
//
template<
    void (Derived::*func)(UINT,UINT,HMENU)
>
struct msg_wm_menuselect
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MENUSELECT)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), (HMENU)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menuchar
//
template<
    LRESULT (Derived::*func)(TCHAR,UINT,HMENU)
>
struct msg_wm_menuchar
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MENUCHAR)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((TCHAR)LOWORD(wParam), (UINT)HIWORD(wParam), (HMENU)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_notify
//
template<
    LRESULT (Derived::*func)(int,LPNMHDR)
>
struct msg_wm_notify
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NOTIFY)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((int)wParam, (LPNMHDR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_enteridle
//
template<
    void (Derived::*func)(UINT,HWND)
>
struct msg_wm_enteridle
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_ENTERIDLE)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mousemove
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_mousemove
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MOUSEMOVE)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mousewheel
//
template<
    LRESULT (Derived::*func)(UINT,short,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_mousewheel
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MOUSEWHEEL)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((UINT)LOWORD(wParam), (short)HIWORD(wParam), KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_lbuttondown
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_lbuttondown
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_LBUTTONDOWN)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_lbuttonup
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_lbuttonup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_LBUTTONUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_lbuttondblclk
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_lbuttondblclk
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_LBUTTONDBLCLK)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_rbuttondown
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_rbuttondown
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_RBUTTONDOWN)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_rbuttonup
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_rbuttonup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_RBUTTONUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_rbuttondblclk
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_rbuttondblclk
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_RBUTTONDBLCLK)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mbuttondown
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_mbuttondown
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MBUTTONDOWN)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mbuttonup
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_mbuttonup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MBUTTONUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mbuttondblclk
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_mbuttondblclk
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MBUTTONDBLCLK)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_parentnotify
//
template<
    void (Derived::*func)(UINT,UINT,LPARAM)
>
struct msg_wm_parentnotify
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_PARENTNOTIFY)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mdiactivate
//
template<
    void (Derived::*func)(HWND,HWND)
>
struct msg_wm_mdiactivate
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MDIACTIVATE)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)wParam, (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_renderformat
//
template<
    void (Derived::*func)(UINT)
>
struct msg_wm_renderformat
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_RENDERFORMAT)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_renderallformats
//
template<
    void (Derived::*func)()
>
struct msg_wm_renderallformats
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_RENDERALLFORMATS)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_destroyclipboard
//
template<
    void (Derived::*func)()
>
struct msg_wm_destroyclipboard
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_DESTROYCLIPBOARD)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_drawclipboard
//
template<
    void (Derived::*func)()
>
struct msg_wm_drawclipboard
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_DRAWCLIPBOARD)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_paintclipboard
//
template<
    void (Derived::*func)(HWND,const LPPAINTSTRUCT)
>
struct msg_wm_paintclipboard
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_PAINTCLIPBOARD)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)wParam, (const LPPAINTSTRUCT)::GlobalLock((HGLOBAL)lParam));
            ::GlobalUnlock((HGLOBAL)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_vscrollclipboard
//
template<
    void (Derived::*func)(HWND,UINT,UINT)
>
struct msg_wm_vscrollclipboard
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_VSCROLLCLIPBOARD)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)wParam, (UINT)LOWORD(lParam), (UINT)HIWORD(lParam));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_contextmenu
//
template<
    void (Derived::*func)(HWND,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_contextmenu
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CONTEXTMENU)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_sizeclipboard
//
template<
    void (Derived::*func)(HWND,const LPRECT)
>
struct msg_wm_sizeclipboard
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SIZECLIPBOARD)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)wParam, (const LPRECT)::GlobalLock((HGLOBAL)lParam));
            ::GlobalUnlock((HGLOBAL)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_askcbformatname
//
template<
    void (Derived::*func)(DWORD,LPTSTR)
>
struct msg_wm_askcbformatname
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_ASKCBFORMATNAME)
        {
            derived.set_msg_handled(true);
            (derived.*func)((DWORD)wParam, (LPTSTR)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_changecbchain
//
template<
    void (Derived::*func)(HWND,HWND)
>
struct msg_wm_changecbchain
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CHANGECBCHAIN)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)wParam, (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_hscrollclipboard
//
template<
    void (Derived::*func)(HWND,UINT,UINT)
>
struct msg_wm_hscrollclipboard
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_HSCROLLCLIPBOARD)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)wParam, (UINT)LOWORD(lParam), (UINT)HIWORD(lParam));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_querynewpalette
//
template<
    LRESULT (Derived::*func)()
>
struct msg_wm_querynewpalette
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_QUERYNEWPALETTE)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)();
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_palettechanged
//
template<
    void (Derived::*func)(HWND)
>
struct msg_wm_palettechanged
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_PALETTECHANGED)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_paletteischanging
//
template<
    void (Derived::*func)(HWND)
>
struct msg_wm_paletteischanging
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_PALETTEISCHANGING)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_dropfiles
//
template<
    void (Derived::*func)(HDROP)
>
struct msg_wm_dropfiles
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_DROPFILES)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HDROP)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_windowposchanging
//
template<
    void (Derived::*func)(LPWINDOWPOS)
>
struct msg_wm_windowposchanging
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_WINDOWPOSCHANGING)
        {
            derived.set_msg_handled(true);
            (derived.*func)((LPWINDOWPOS)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_windowposchanged
//
template<
    void (Derived::*func)(LPWINDOWPOS)
>
struct msg_wm_windowposchanged
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_WINDOWPOSCHANGED)
        {
            derived.set_msg_handled(true);
            (derived.*func)((LPWINDOWPOS)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_exitmenuloop
//
template<
    void (Derived::*func)(BOOL)
>
struct msg_wm_exitmenuloop
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_EXITMENULOOP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((BOOL)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_entermenuloop
//
template<
    void (Derived::*func)(BOOL)
>
struct msg_wm_entermenuloop
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_ENTERMENULOOP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((BOOL)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_stylechanged
//
template<
    void (Derived::*func)(UINT,LPSTYLESTRUCT)
>
struct msg_wm_stylechanged
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_STYLECHANGED)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (LPSTYLESTRUCT)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_stylechanging
//
template<
    void (Derived::*func)(UINT,LPSTYLESTRUCT)
>
struct msg_wm_stylechanging
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_STYLECHANGING)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (LPSTYLESTRUCT)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_sizing
//
template<
    void (Derived::*func)(UINT,LPRECT)
>
struct msg_wm_sizing
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SIZING)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (LPRECT)lParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_moving
//
template<
    void (Derived::*func)(UINT,LPRECT)
>
struct msg_wm_moving
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MOVING)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (LPRECT)lParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_capturechanged
//
template<
    void (Derived::*func)(HWND)
>
struct msg_wm_capturechanged
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CAPTURECHANGED)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_devicechange
//
template<
    LRESULT (Derived::*func)(UINT,DWORD)
>
struct msg_wm_devicechange
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_DEVICECHANGE)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((UINT)wParam, (DWORD)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_command
//
template<
    void (Derived::*func)(UINT,int,HWND)
>
struct msg_wm_command
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_COMMAND)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_displaychange
//
template<
    void (Derived::*func)(UINT,KETCHUP_wtype_ns::CSize)
>
struct msg_wm_displaychange
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_DISPLAYCHANGE)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, KETCHUP_wtype_ns::CSize(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_entersizemove
//
template<
    void (Derived::*func)()
>
struct msg_wm_entersizemove
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_ENTERSIZEMOVE)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_exitsizemove
//
template<
    void (Derived::*func)()
>
struct msg_wm_exitsizemove
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_EXITSIZEMOVE)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_getfont
//
template<
    LRESULT (Derived::*func)()
>
struct msg_wm_getfont
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_GETFONT)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)();
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_gethotkey
//
template<
    LRESULT (Derived::*func)()
>
struct msg_wm_gethotkey
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_GETHOTKEY)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)();
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_geticon
//
template<
    LRESULT (Derived::*func)(UINT)
>
struct msg_wm_geticon
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_GETICON)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((UINT)wParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_gettext
//
template<
    LRESULT (Derived::*func)(int,LPTSTR)
>
struct msg_wm_gettext
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_GETTEXT)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((int)wParam, (LPTSTR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_gettextlength
//
template<
    LRESULT (Derived::*func)()
>
struct msg_wm_gettextlength
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_GETTEXTLENGTH)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)();
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_help
//
template<
    void (Derived::*func)(LPHELPINFO)
>
struct msg_wm_help
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_HELP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((LPHELPINFO)lParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_hotkey
//
template<
    void (Derived::*func)(int,UINT,UINT)
>
struct msg_wm_hotkey
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_HOTKEY)
        {
            derived.set_msg_handled(true);
            (derived.*func)((int)wParam, (UINT)LOWORD(lParam), (UINT)HIWORD(lParam));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_inputlangchange
//
template<
    void (Derived::*func)(DWORD,HKL)
>
struct msg_wm_inputlangchange
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_INPUTLANGCHANGE)
        {
            derived.set_msg_handled(true);
            (derived.*func)((DWORD)wParam, (HKL)lParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_inputlangchangerequest
//
template<
    void (Derived::*func)(BOOL,HKL)
>
struct msg_wm_inputlangchangerequest
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_INPUTLANGCHANGEREQUEST)
        {
            derived.set_msg_handled(true);
            (derived.*func)((BOOL)wParam, (HKL)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nextdlgctl
//
template<
    void (Derived::*func)(BOOL,WPARAM)
>
struct msg_wm_nextdlgctl
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NEXTDLGCTL)
        {
            derived.set_msg_handled(true);
            (derived.*func)((BOOL)LOWORD(lParam), wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_nextmenu
//
template<
    void (Derived::*func)(int,LPMDINEXTMENU)
>
struct msg_wm_nextmenu
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NEXTMENU)
        {
            derived.set_msg_handled(true);
            (derived.*func)((int)wParam, (LPMDINEXTMENU)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_notifyformat
//
template<
    LRESULT (Derived::*func)(HWND,int)
>
struct msg_wm_notifyformat
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NOTIFYFORMAT)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HWND)wParam, (int)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_powerbroadcast
//
template<
    LRESULT (Derived::*func)(DWORD,DWORD)
>
struct msg_wm_powerbroadcast
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_POWERBROADCAST)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((DWORD)wParam, (DWORD)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_print
//
template<
    void (Derived::*func)(HDC,UINT)
>
struct msg_wm_print
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_PRINT)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HDC)wParam, (UINT)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_printclient
//
template<
    void (Derived::*func)(HDC,UINT)
>
struct msg_wm_printclient
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_PRINTCLIENT)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HDC)wParam, (UINT)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_rasdialevent
//
template<
    void (Derived::*func)(RASCONNSTATE,DWORD)
>
struct msg_wm_rasdialevent
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_RASDIALEVENT)
        {
            derived.set_msg_handled(true);
            (derived.*func)((RASCONNSTATE)wParam, (DWORD)lParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_setfont
//
template<
    void (Derived::*func)(HFONT,BOOL)
>
struct msg_wm_setfont
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SETFONT)
        {
            derived.set_msg_handled(true);
            (derived.*func)((HFONT)wParam, (BOOL)LOWORD(lParam));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_sethotkey
//
template<
    LRESULT (Derived::*func)(int,UINT)
>
struct msg_wm_sethotkey
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SETHOTKEY)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((int)LOBYTE(LOWORD(wParam)), (UINT)HIBYTE(LOWORD(wParam)));
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_seticon
//
template<
    LRESULT (Derived::*func)(UINT,HICON)
>
struct msg_wm_seticon
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SETICON)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((UINT)wParam, (HICON)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_setredraw
//
template<
    void (Derived::*func)(BOOL)
>
struct msg_wm_setredraw
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SETREDRAW)
        {
            derived.set_msg_handled(true);
            (derived.*func)((BOOL)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_settext
//
template<
    LRESULT (Derived::*func)(LPCTSTR)
>
struct msg_wm_settext
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_SETTEXT)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((LPCTSTR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_userchanged
//
template<
    void (Derived::*func)()
>
struct msg_wm_userchanged
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_USERCHANGED)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// New NT4 & NT5 messages

#if(_WIN32_WINNT >= 0x0400)

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mousehover
//
template<
    void (Derived::*func)(WPARAM,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_mousehover
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MOUSEHOVER)
        {
            derived.set_msg_handled(true);
            (derived.*func)(wParam, KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_mouseleave
//
template<
    void (Derived::*func)()
>
struct msg_wm_mouseleave
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MOUSELEAVE)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

#endif /* _WIN32_WINNT >= 0x0400 */

#if(WINVER >= 0x0500)

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menurbuttonup
//
template<
    void (Derived::*func)(WPARAM,HMENU)
>
struct msg_wm_menurbuttonup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MENURBUTTONUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)(wParam, (HMENU)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menudrag
//
template<
    LRESULT (Derived::*func)(WPARAM,HMENU)
>
struct msg_wm_menudrag
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MENUDRAG)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)(wParam, (HMENU)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menugetobject
//
template<
    LRESULT (Derived::*func)(PMENUGETOBJECTINFO)
>
struct msg_wm_menugetobject
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MENUGETOBJECT)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((PMENUGETOBJECTINFO)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_uninitmenupopup
//
template<
    void (Derived::*func)(UINT,HMENU)
>
struct msg_wm_uninitmenupopup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_UNINITMENUPOPUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(lParam), (HMENU)wParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_menucommand
//
template<
    void (Derived::*func)(WPARAM,HMENU)
>
struct msg_wm_menucommand
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_MENUCOMMAND)
        {
            derived.set_msg_handled(true);
            (derived.*func)(wParam, (HMENU)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

#endif /* WINVER >= 0x0500 */

#if(_WIN32_WINNT >= 0x0500)

///////////////////////////////////////////////////////////////////////////////
// msg_wm_appcommand
//
template<
    LRESULT (Derived::*func)(HWND,WORD,WORD,WORD)
>
struct msg_wm_appcommand
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_APPCOMMAND)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((HWND)wParam, GET_APPCOMMAND_LPARAM(lParam), GET_DEVICE_LPARAM(lParam), GET_KEYSTATE_LPARAM(lParam));
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncxbuttondown
//
template<
    void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_ncxbuttondown
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCXBUTTONDOWN)
        {
            derived.set_msg_handled(true);
            (derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_NCHITTEST_WPARAM(wParam), KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncxbuttonup
//
template<
    void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_ncxbuttonup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCXBUTTONUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_NCHITTEST_WPARAM(wParam), KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_ncxbuttondblclk
//
template<
    void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_ncxbuttondblclk
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NCXBUTTONDBLCLK)
        {
            derived.set_msg_handled(true);
            (derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_NCHITTEST_WPARAM(wParam), KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_xbuttondown
//
template<
    void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_xbuttondown
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_XBUTTONDOWN)
        {
            derived.set_msg_handled(true);
            (derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_KEYSTATE_WPARAM(wParam), KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_xbuttonup
//
template<
    void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_xbuttonup
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_XBUTTONUP)
        {
            derived.set_msg_handled(true);
            (derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_KEYSTATE_WPARAM(wParam), KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_xbuttondblclk
//
template<
    void (Derived::*func)(WORD,WORD,KETCHUP_wtype_ns::CPoint)
>
struct msg_wm_xbuttondblclk
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_XBUTTONDBLCLK)
        {
            derived.set_msg_handled(true);
            (derived.*func)(GET_XBUTTON_WPARAM(wParam), GET_KEYSTATE_WPARAM(wParam), KETCHUP_wtype_ns::CPoint(GET_X_LPARAM(lParam), GET_Y_LPARAM(lParam)));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_changeuistate
//
template<
    void (Derived::*func)(WORD,WORD)
>
struct msg_wm_changeuistate
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CHANGEUISTATE)
        {
            derived.set_msg_handled(true);
            (derived.*func)(LOWORD(wParam), HIWORD(wParam));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_updateuistate
//
template<
    void (Derived::*func)(WORD,WORD)
>
struct msg_wm_updateuistate
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_UPDATEUISTATE)
        {
            derived.set_msg_handled(true);
            (derived.*func)(LOWORD(wParam), HIWORD(wParam));
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_queryuistate
//
template<
    LRESULT (Derived::*func)()
>
struct msg_wm_queryuistate
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_QUERYUISTATE)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)();
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

#endif //(_WIN32_WINNT >= 0x0500)

#if(_WIN32_WINNT >= 0x0501)

///////////////////////////////////////////////////////////////////////////////
// msg_wm_input
//
template<
    void (Derived::*func)(WORD,HRAWINPUT)
>
struct msg_wm_input
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_INPUT)
        {
            derived.set_msg_handled(true);
            (derived.*func)(GET_RAWINPUT_CODE_WPARAM(wParam), (HRAWINPUT)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_unichar
//
template<
    void (Derived::*func)(TCHAR,UINT,UINT)
>
struct msg_wm_unichar
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_UNICHAR)
        {
            derived.set_msg_handled(true);
            (derived.*func)((TCHAR)wParam, (UINT)lParam & 0xFFFF, (UINT)((lParam & 0xFFFF0000) >> 16));
            
            {
            derived.set_msg_handled(true);    lResult = (wParam == UNICODE_NOCHAR) ? TRUE : FALSE;
            if(derived.is_msg_handled()) return true;
            }
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_wtssession_change
//
template<
    void (Derived::*func)(WPARAM,PWTSSESSION_NOTIFICATION)
>
struct msg_wm_wtssession_change
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_WTSSESSION_CHANGE)
        {
            derived.set_msg_handled(true);
            (derived.*func)(wParam, (PWTSSESSION_NOTIFICATION)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_themechanged
//
template<
    void (Derived::*func)()
>
struct msg_wm_themechanged
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_THEMECHANGED)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

#endif /* _WIN32_WINNT >= 0x0501 */

///////////////////////////////////////////////////////////////////////////////
// ATL defined messages

///////////////////////////////////////////////////////////////////////////////
// msg_wm_forwardmsg
//
template<
    LRESULT (Derived::*func)(LPMSG,DWORD)
>
struct msg_wm_forwardmsg
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_FORWARDMSG)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((LPMSG)lParam, (DWORD)wParam);
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// Dialog specific messages

///////////////////////////////////////////////////////////////////////////////
// msg_dm_getdefid
//
template<
    LRESULT (Derived::*func)()
>
struct msg_dm_getdefid
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == DM_GETDEFID)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)();
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_dm_setdefid
//
template<
    void (Derived::*func)(UINT)
>
struct msg_dm_setdefid
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == DM_SETDEFID)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_dm_reposition
//
template<
    void (Derived::*func)()
>
struct msg_dm_reposition
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == DM_REPOSITION)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// Reflected messages

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_command
//
template<
    void (Derived::*func)(UINT,int,HWND)
>
struct msg_ocm_command
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_COMMAND)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_notify
//
template<
    LRESULT (Derived::*func)(int,LPNMHDR)
>
struct msg_ocm_notify
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_NOTIFY)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((int)wParam, (LPNMHDR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_parentnotify
//
template<
    void (Derived::*func)(UINT,UINT,LPARAM)
>
struct msg_ocm_parentnotify
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_PARENTNOTIFY)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_drawitem
//
template<
    void (Derived::*func)(UINT,LPDRAWITEMSTRUCT)
>
struct msg_ocm_drawitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_DRAWITEM)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (LPDRAWITEMSTRUCT)lParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_measureitem
//
template<
    void (Derived::*func)(UINT,LPMEASUREITEMSTRUCT)
>
struct msg_ocm_measureitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_MEASUREITEM)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (LPMEASUREITEMSTRUCT)lParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_compareitem
//
template<
    LRESULT (Derived::*func)(UINT,LPCOMPAREITEMSTRUCT)
>
struct msg_ocm_compareitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_COMPAREITEM)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((UINT)wParam, (LPCOMPAREITEMSTRUCT)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_deleteitem
//
template<
    void (Derived::*func)(UINT,LPDELETEITEMSTRUCT)
>
struct msg_ocm_deleteitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_DELETEITEM)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)wParam, (LPDELETEITEMSTRUCT)lParam);
            lResult = TRUE;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_vkeytoitem
//
template<
    LRESULT (Derived::*func)(UINT,UINT,HWND)
>
struct msg_ocm_vkeytoitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_VKEYTOITEM)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_chartoitem
//
template<
    LRESULT (Derived::*func)(UINT,UINT,HWND)
>
struct msg_ocm_chartoitem
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_CHARTOITEM)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((UINT)LOWORD(wParam), (UINT)HIWORD(wParam), (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_hscroll
//
template<
    void (Derived::*func)(int,short,HWND)
>
struct msg_ocm_hscroll
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_HSCROLL)
        {
            derived.set_msg_handled(true);
            (derived.*func)((int)LOWORD(wParam), (short)HIWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_vscroll
//
template<
    void (Derived::*func)(int,short,HWND)
>
struct msg_ocm_vscroll
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_VSCROLL)
        {
            derived.set_msg_handled(true);
            (derived.*func)((int)LOWORD(wParam), (short)HIWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcoloredit
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcoloredit
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_CTLCOLOREDIT)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcolorlistbox
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcolorlistbox
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_CTLCOLORLISTBOX)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcolorbtn
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcolorbtn
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_CTLCOLORBTN)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcolordlg
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcolordlg
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_CTLCOLORDLG)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcolorscrollbar
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcolorscrollbar
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_CTLCOLORSCROLLBAR)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_ocm_ctlcolorstatic
//
template<
    LRESULT (Derived::*func)(HDC,HWND)
>
struct msg_ocm_ctlcolorstatic
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_CTLCOLORSTATIC)
        {
            derived.set_msg_handled(true);
            lResult = (LRESULT)(derived.*func)((HDC)wParam, (HWND)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// Edit specific messages

///////////////////////////////////////////////////////////////////////////////
// msg_wm_clear
//
template<
    void (Derived::*func)()
>
struct msg_wm_clear
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CLEAR)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_copy
//
template<
    void (Derived::*func)()
>
struct msg_wm_copy
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_COPY)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_cut
//
template<
    void (Derived::*func)()
>
struct msg_wm_cut
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_CUT)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_paste
//
template<
    void (Derived::*func)()
>
struct msg_wm_paste
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_PASTE)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// msg_wm_undo
//
template<
    void (Derived::*func)()
>
struct msg_wm_undo
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_UNDO)
        {
            derived.set_msg_handled(true);
            (derived.*func)();
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// Generic message handlers

///////////////////////////////////////////////////////////////////////////////
// message_handler_ex
//
template<
    UINT msg,LRESULT (Derived::*func)(UINT,WPARAM,LPARAM)
>
struct message_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if(uMsg == msg)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)(uMsg, wParam, lParam);
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// message_range_handler_ex
//
template<
    UINT msgFirst,UINT msgLast,LRESULT (Derived::*func)(UINT,WPARAM,LPARAM)
>
struct message_range_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if(uMsg >= msgFirst && uMsg <= msgLast)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)(uMsg, wParam, lParam);
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// Commands and notifications

///////////////////////////////////////////////////////////////////////////////
// command_handler_ex
//
template<
    UINT id,UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct command_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_COMMAND && code == HIWORD(wParam) && id == LOWORD(wParam))
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// command_id_handler_ex
//
template<
    UINT id,void (Derived::*func)(UINT,int,HWND)
>
struct command_id_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_COMMAND && id == LOWORD(wParam))
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// command_code_handler_ex
//
template<
    UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct command_code_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_COMMAND && code == HIWORD(wParam))
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// notify_handler_ex
//
template<
    UINT id,UINT cd,LRESULT (Derived::*func)(LPNMHDR)
>
struct notify_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NOTIFY && cd == ((LPNMHDR)lParam)->code && id == ((LPNMHDR)lParam)->idFrom)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((LPNMHDR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// notify_id_handler_ex
//
template<
    UINT id,LRESULT (Derived::*func)(LPNMHDR)
>
struct notify_id_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NOTIFY && id == ((LPNMHDR)lParam)->idFrom)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((LPNMHDR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// notify_code_handler_ex
//
template<
    UINT cd,LRESULT (Derived::*func)(LPNMHDR)
>
struct notify_code_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == WM_NOTIFY && cd == ((LPNMHDR)lParam)->code)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((LPNMHDR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// command_range_handler_ex
//
template<
    UINT idFirst,UINT idLast,void (Derived::*func)(UINT,int,HWND)
>
struct command_range_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if(uMsg == WM_COMMAND && LOWORD(wParam) >= idFirst  && LOWORD(wParam) <= idLast)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// command_range_code_handler_ex
//
template<
    UINT idFirst,UINT idLast,UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct command_range_code_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if(uMsg == WM_COMMAND && code == HIWORD(wParam) && LOWORD(wParam) >= idFirst  && LOWORD(wParam) <= idLast)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// notify_range_handler_ex
//
template<
    UINT idFirst,UINT idLast,LRESULT (Derived::*func)(LPNMHDR)
>
struct notify_range_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if(uMsg == WM_NOTIFY && ((LPNMHDR)lParam)->idFrom >= idFirst && ((LPNMHDR)lParam)->idFrom <= idLast)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((LPNMHDR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// notify_range_code_handler_ex
//
template<
    UINT idFirst,UINT idLast,UINT cd,LRESULT (Derived::*func)(LPNMHDR)
>
struct notify_range_code_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if(uMsg == WM_NOTIFY && cd == ((LPNMHDR)lParam)->code && ((LPNMHDR)lParam)->idFrom >= idFirst && ((LPNMHDR)lParam)->idFrom <= idLast)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((LPNMHDR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// reflected_command_handler_ex
//
template<
    UINT id,UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct reflected_command_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_COMMAND && code == HIWORD(wParam) && id == LOWORD(wParam))
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// reflected_command_id_handler_ex
//
template<
    UINT id,void (Derived::*func)(UINT,int,HWND)
>
struct reflected_command_id_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_COMMAND && id == LOWORD(wParam))
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// reflected_command_code_handler_ex
//
template<
    UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct reflected_command_code_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_COMMAND && code == HIWORD(wParam))
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// reflected_notify_handler_ex
//
template<
    UINT id,UINT cd,LRESULT (Derived::*func)(LPNMHDR)
>
struct reflected_notify_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_NOTIFY && cd == ((LPNMHDR)lParam)->code && id == ((LPNMHDR)lParam)->idFrom)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((LPNMHDR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// reflected_notify_id_handler_ex
//
template<
    UINT id,LRESULT (Derived::*func)(LPNMHDR)
>
struct reflected_notify_id_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_NOTIFY && id == ((LPNMHDR)lParam)->idFrom)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((LPNMHDR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// reflected_notify_code_handler_ex
//
template<
    UINT cd,LRESULT (Derived::*func)(LPNMHDR)
>
struct reflected_notify_code_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if (uMsg == OCM_NOTIFY && cd == ((LPNMHDR)lParam)->code)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((LPNMHDR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// reflected_command_range_handler_ex
//
template<
    UINT idFirst,UINT idLast,void (Derived::*func)(UINT,int,HWND)
>
struct reflected_command_range_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if(uMsg == OCM_COMMAND && LOWORD(wParam) >= idFirst  && LOWORD(wParam) <= idLast)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
    
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// reflected_command_range_code_handler_ex
//
template<
    UINT idFirst,UINT idLast,UINT code,void (Derived::*func)(UINT,int,HWND)
>
struct reflected_command_range_code_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if(uMsg == OCM_COMMAND && code == HIWORD(wParam) && LOWORD(wParam) >= idFirst  && LOWORD(wParam) <= idLast)
        {
            derived.set_msg_handled(true);
            (derived.*func)((UINT)HIWORD(wParam), (int)LOWORD(wParam), (HWND)lParam);
            lResult = 0;
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

///////////////////////////////////////////////////////////////////////////////
// reflected_notify_range_handler_ex
//
template<
    UINT idFirst,UINT idLast,LRESULT (Derived::*func)(LPNMHDR)
>
struct reflected_notify_range_handler_ex
{
    static bool process(Derived& derived, HWND hWnd, UINT uMsg, WPARAM wParam, LPARAM lParam, LRESULT& lResult, DWORD dwMsgMapID)
    {
        (derived); (hWnd); (uMsg); (wParam); (lParam); (lResult); (dwMsgMapID);

        if(uMsg == OCM_NOTIFY && ((LPNMHDR)lParam)->idFrom >= idFirst && ((LPNMHDR)lParam)->idFrom <= idLast)
        {
            derived.set_msg_handled(true);
            lResult = (derived.*func)((LPNMHDR)lParam);
            
            if(derived.is_msg_handled()) return true;
        }
        return false;
    }
};

