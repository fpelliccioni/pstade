#ifndef PSTADE_EGG_EGG_HPP
#define PSTADE_EGG_EGG_HPP


// PStade.Egg
//
// Copyright Shunsuke Sogame 2007.
// Distributed under the Boost Software License, Version 1.0.
// (See accompanying file LICENSE_1_0.txt or copy at
// http://www.boost.org/LICENSE_1_0.txt)


#include "./after.hpp"
#include "./always.hpp"
#include "./ambi.hpp"
#include "./apply.hpp"
#include "./auto_object.hpp"
#include "./automatic.hpp"
#include "./before.hpp"
#include "./bll.hpp"
#include "./by_cref.hpp"
#include "./by_perfect.hpp"
#include "./by_ref.hpp"
#include "./by_value.hpp"
#include "./compose.hpp"
#include "./compose2.hpp"
#include "./config.hpp"
#include "./const.hpp"
#include "./construct.hpp"
#include "./constructor.hpp"
#include "./copy.hpp"
#include "./copy_assign.hpp"
#include "./curry.hpp"
#include "./deduced_form.hpp"
#include "./defer_sig.hpp"
#include "./deferred.hpp"
#include "./delete.hpp"
#include "./delete_array.hpp"
#include "./deref.hpp"
#include "./divides.hpp"
#include "./do_swap.hpp"
#include "./equal_to.hpp"
#include "./equal_to_0.hpp"
#include "./extension.hpp"
#include "./fix.hpp"
#include "./flip.hpp"
#include "./from.hpp"
#include "./function.hpp"
#include "./function_facade.hpp"
#include "./function_fwd.hpp"
#include "./function_of.hpp"
#include "./fuse.hpp"
#include "./generator.hpp"
#include "./greater.hpp"
#include "./greater_equal.hpp"
#include "./identity.hpp"
#include "./iequal_to.hpp"
#include "./indirect.hpp"
#include "./infix.hpp"
#include "./integral_cast.hpp"
#include "./integralize.hpp"
#include "./is_classified_as.hpp"
#include "./is_same.hpp"
#include "./keyword.hpp"
#include "./less.hpp"
#include "./less_equal.hpp"
#include "./lexical_cast.hpp"
#include "./lexicalize.hpp"
#include "./little_apply.hpp"
#include "./logical_and.hpp"
#include "./logical_not.hpp"
#include "./logical_or.hpp"
#include "./logical_xor.hpp"
#include "./make_function.hpp"
#include "./make_function_of.hpp"
#include "./memoize.hpp"
#include "./minus.hpp"
#include "./modulus.hpp"
#include "./mono.hpp"
#include "./move_assign.hpp"
#include "./multiplies.hpp"
// #include "./named.hpp"
#include "./negate.hpp"
#include "./new.hpp"
#include "./new_array.hpp"
#include "./new_auto.hpp"
#include "./new_ptr.hpp"
#include "./new_shared.hpp"
#include "./new_shared_array.hpp"
#include "./not.hpp"
#include "./nullary_result_of.hpp"
#include "./parallel.hpp"
#include "./perfect.hpp"
#include "./pipable.hpp"
#include "./plus.hpp"
#include "./regular.hpp"
#include "./result_of_ref.hpp"
#include "./ret.hpp"
#include "./return.hpp"
#include "./shared_object.hpp"
#include "./sig_template.hpp"
#include "./specified.hpp"
#include "./static_down.hpp"
#include "./static_downcast.hpp"
#include "./strong_assign.hpp"
#include "./tagged.hpp"
#include "./to_lower.hpp"
#include "./to_ref.hpp"
#include "./to_shared_ptr.hpp"
#include "./to_string.hpp"
#include "./to_upper.hpp"
#include "./to_value.hpp"
#include "./tuple.hpp"
#include "./uncurry.hpp"
#include "./unfuse.hpp"
#include "./use_brace1.hpp"
#include "./use_brace2.hpp"
#include "./use_constructor.hpp"


#endif
