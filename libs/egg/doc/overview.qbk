[section Overview]

["An Egg to day is better than a Hen to-morrow.] -- Benjamin Franklin

[import ../example/introduction.cpp]




[section Introduction]

Unlike other modern languages, it is very difficult to make a function in C++
especially if you want to support __BOOST_RESULT_OF__ and __BOOST_LAMBDA__.
Egg is a small header-only framework of building functions, and offers higher-order functions.

[code_introduction]

[endsect]




[section Requirements]

* __BOOST__ Version 1.34.0 or later (build not required)
* __PSTADE_RELEASE__ Version 1.03.9 or later (build not required)

[endsect]




[section Portability]

Egg is known to work on the following platforms:

* Microsoft Visual C++ .NET Version 7.1 SP1
* Microsoft Visual C++ 2005 Express Edition SP1
* MinGW with GCC 3.4.4
* MinGW with GCC 4.1.2
* Intel C++ Compiler Professional Edition 10.1 for Windows

[endsect]




[section Rationale]

* Egg works around __FORWARDING_PROBLEM__.
* Egg framework provides a way of /static initialization/ if possible.

[endsect]




[section Acknowledgements]
* Special thanks to David Abrahams. __FORWARDING_PROBLEM__ workaround is based on his __DAVID_CALLABLE__.
* Special thanks to Eric Niebler, who pointed out importance of /static initialization/.
* Special thanks to Cryolite, Takeshi Mouri, yotto-k and Yusuke Kajimoto.
  These people are instrumental in the design and development of Egg.

[endsect]




[section Notation]

This document uses the following notation.

[table
    [
        [[*Valid expression]]
        [[*Semantics]]
    ]
    [
        [`_decltype`]
        [An imaginary operator which is the same as `decltype` of C++0x.]
    ]
    [
        [`_typeof(a)`]
        [`boost::remove_cv<boost::remove_reference<_decltype(a)>::type>::type`]
    ]
    [
        [`_const(a)`]
        [`static_cast<_typeof(a) const>(a)`]
    ]
    [
        [`_pfo`]
        [A __POLYMORPHIC_FUNCTION_OBJECT__]
    ]
    [
        [`_PFo`]
        [A __POLYMORPHIC_FUNCTION_OBJECT__ type which is neither /reference/ nor /cv-qualified/.]
    ]
    [
        [`_lit`]
        [A __LITTLE_FUNCTION__ object]
    ]
    [
        [`_Lit`]
        [A __LITTLE_FUNCTION__ type which is neither /reference/ nor /cv-qualified/.]
    ]
    [
        [`_Stg`]
        [A type which is one of the __EGG_FORWARDING_STRATEGIES__.]
    ]
    [
	    [`_default`]
	    [`boost::use_default`]
    ]
    [
        [`_TUPLE_MAX_SIZE`]
        [`10`]
    ]
    [
        [`++`]
        [An imaginary operator to concatenate tokens.]
    ]
]

Also, assume that every expression is placed after:

    namespace egg = pstade::egg;
    using namespace egg;

[endsect]




[endsect]
