
[library Wine
    [quickbook 1.3]
    [version 0.90.0]
    [authors [Sogame, Shunsuke]]
    [copyright 2007 Shunsuke Sogame]
    [category functional]
    [id egg]
    [dirname egg]
    [purpose functional programming utilities]
    [source-mode c++]
    [license
Distributed under the Boost Software License, Version 1.0.
(See accompanying file LICENSE_1_0.txt or copy at
[@http://www.boost.org/LICENSE_1_0.txt])
    ]
]




[/ External Links ]

[def __BOOST__ [@http://www.boost.org Boost C++ Libraries]]
[def __BOOST_ENABLE_IF__ [@http://www.boost.org/libs/utility/enable_if.html Boost.EnableIf]]
[def __BOOST_LAMBDA__ [@http://www.boost.org/libs/lambda/ Boost.Lambda]]
[def __BOOST_PHOENIX__ [@http://www.boost.org/libs/spirit/phoenix/index.html Boost.Phoenix]]
[def __BOOST_RESULT_OF__ [@http://www.boost.org/libs/utility/utility.htm#result_of Boost.ResultOf]]
[def __BOOST_TUPLE__ [@http://www.boost.org/libs/tuple/index.html Boost.Tuple]]
[def __PSTADE_RELEASE__ [@http://sourceforge.net/project/showfiles.php?group_id=141222&package_id=173059 P-Stade C++ Libraries]]
[def __FCPP__ [@http://www.cc.gatech.edu/~yannis/fc++/ FC++]]

[def __ASSIGNABLE__            [@http://boost.org/doc/html/Assignable.html Assignable]]
[def __COPY_CONSTRUCTIBLE__    [@http://boost.org/doc/html/CopyConstructible.html Copy Constructible]]
[def __EQUALITY_COMPARABLE__   [@http://boost.org/doc/html/EqualityComparable.html Equality Comparable]]
[def __DEFAULT_CONSTRUCTIBLE__ [@http://boost.org/doc/html/DefaultConstructible.html Default Constructible]]
[def __DEFERRED_CALLABLE_OBJECT__ [@http://boost-consulting.com/boost/libs/fusion/doc/html/fusion/functional/concepts/def_callable.html Deferred Callable Object]]
[def __DEFERRED_CALLABLE__ [@http://boost-consulting.com/boost/libs/fusion/doc/html/fusion/functional/concepts/def_callable.html Deferred Callable]]
[def __FUNCTION_OBJECT__ [@http://www.sgi.com/tech/stl/functors.html Function Object]]
[def __METAFUNCTION__ [@http://www.boost.org/libs/mpl/doc/refmanual/metafunction.html Metafunction]]
[def __MPL_LAMBDA_EXPRESSION__ [@http://www.boost.org/libs/mpl/doc/refmanual/lambda-expression.html MPL Lambda Expression]]
[def __MPL_FORWARD_SEQUENCE__ [@http://www.boost.org/libs/mpl/doc/refmanual/forward-sequence.html MPL Forward Sequence]]
[def __SGI_ADAPTABLE__ [@http://www.sgi.com/tech/stl/AdaptableUnaryFunction.html Adaptable]]

[def __BOOST_INDIRECT_ITERATOR__ [@http://www.boost.org/libs/iterator/doc/indirect_iterator.html boost::indirect_iterator]]
[def __BOOST_FUSION_FUNCTIONAL__ [@http://boost-consulting.com/boost/libs/fusion/doc/html/fusion/functional/adapters.html Fusion Functional Adapters]]

[def __FORWARDING_PROBLEM__ [@http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2002/n1385.htm The Forwarding Problem]]
[def __DAVID_CALLABLE__ [@http://article.gmane.org/gmane.comp.parsers.spirit.devel/2826  callable]]

[def __VARIADIC_TEMPLATES__ [@http://www.generic-programming.org/~dgregor/cpp/variadic-templates.html Variadic Templates]]

[def __CLONABLE__ [@http://www.boost.org/libs/ptr_container/doc/reference.html#the-clonable-concept Clonable]]
[def __OPTIONAL_POINTEE__ [@http://www.boost.org/libs/utility/OptionalPointee.html Optional Pointee]]




[/ Internal Links ]

[def __CONSTANT_OBJECT__ [link wine.concepts.constant_object Constant Object]]
[def __RESETTABLE_OBJECT__ [link wine.concepts.resettable_object Resettable Object]]
[def __RESETTABLE__ [link wine.concepts.resettable_object Resettable]]




[include preface.qbk]
[include concepts.qbk]
[include utilities.qbk]
[include version_history.qbk]


