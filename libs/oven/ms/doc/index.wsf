<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<package>
<job id="run_rst2html_and_inline">
<?job error="true" debug="no" ?>
<runtime>
	<description>run_rst2html_and_inline</description>
</runtime>

<script language="JavaScript" src="../../../cupcake/basic.js"/>
<script language="JavaScript" src="../../../cupcake/filesystem.js"/>
<script language="JavaScript" src="../../../cupcake/shell.js"/>
<script language="JavaScript" src="../../../cupcake/rst.js"/>

<script language="JavaScript">

<![CDATA[
///////////////////////////////////////////////////////////////////////////////
//
var g_debug = false;

var g_stylesheet_path = cupcake_this_folder_file_path("rst.css");

var g_in_path = cupcake_this_folder_file_path("mfc_atl.rst");
var g_out_path = "E:\\p-stade.sourceforge.net\\pstade\\libs\\oven\\doc\\ms\\mfc_atl"

main();

function main()
{
	//cupcake_for_each_arg( true, function(arg) { main_impl(arg); } );
	main_impl(g_in_path);
}

function main_impl(arg)
{
	//var out_path = cupcake_this_folder_file_path("index");

	var command = cupcake_python_path + " " +
		cupcake_wrap_path(cupcake_rst2html_path) + " " +
		"--stylesheet " + cupcake_wrap_path(g_stylesheet_path) + " " +
		"-stg " +
		cupcake_wrap_path(arg) +
		cupcake_wrap_path(g_out_path);

	cupcake_trace(command, g_debug);
	_sh.run(command, 1, true);
	
	inline_impl(g_out_path);
}

function inline_impl(path)
{
	var command = cupcake_inliner_path + " " +
		cupcake_wrap_path(path);
	
	cupcake_trace(command, g_debug);
	_sh.run(command, 1, true);
}

///////////////////////////////////////////////////////////////////////////////
]]>

</script>
</job>
</package>